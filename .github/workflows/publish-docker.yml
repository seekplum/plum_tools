name: Publish docker image

on:
  pull_request: {}
  push:
    branches: master
    tags: "*"

env:
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Generate My Version
        run: echo MY_VERSION=`grep "VERSION =" plum_tools/conf.py | grep -Eo "([0-9]+\.){2}[0-9]+"` >> $GITHUB_ENV

      - name: Set Docker Image Name
        run: echo DOCKERHUB_IMAGE_NAME=${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.MY_VERSION }} >> $GITHUB_ENV

      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJSON(github) }}
      #   # 将GTIHUB的信息都打印出来，后面的脚本可以使用这些信息
      #   run: echo "GITHUB_CONTEXT ${{ env.GITHUB_CONTEXT }}"

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      #   with:
      #     images: ${{ env.DOCKERHUB_IMAGE_NAME }}

      # - name: Debug Metadata
      #   run: echo "Metadata ${{ toJSON(steps.meta.outputs) }}"

      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_IMAGE_NAME }}

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true
